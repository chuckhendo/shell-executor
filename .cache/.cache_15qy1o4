{"/Users/roy/royws/shell-executor/source/src/process.js":{"size":26,"mtime":1483338490000,"hashOfConfig":"suduii","results":{"filePath":"/Users/roy/royws/shell-executor/source/src/process.js","messages":[],"errorCount":0,"warningCount":0}},"/Users/roy/royws/shell-executor/source/bin/cli.js":{"size":199,"mtime":1484752574000,"hashOfConfig":"suduii","results":{"filePath":"/Users/roy/royws/shell-executor/source/bin/cli.js","messages":[],"errorCount":0,"warningCount":0}},"/Users/roy/royws/shell-executor/source/src/options.js":{"size":849,"mtime":1486104641000,"hashOfConfig":"suduii","results":{"filePath":"/Users/roy/royws/shell-executor/source/src/options.js","messages":[],"errorCount":0,"warningCount":0}},"/Users/roy/royws/shell-executor/source/time-manager.js":{"size":390,"mtime":1484751608000,"hashOfConfig":"suduii","results":{"filePath":"/Users/roy/royws/shell-executor/source/time-manager.js","messages":[],"errorCount":0,"warningCount":0}},"/Users/roy/royws/shell-executor/source/index.js":{"size":2879,"mtime":1484751986000,"hashOfConfig":"suduii","results":{"filePath":"/Users/roy/royws/shell-executor/source/index.js","messages":[],"errorCount":0,"warningCount":0}},"/Users/roy/royws/shell-executor/specs/index.spec.js":{"size":1019,"mtime":1486103628000,"hashOfConfig":"suduii","results":{"filePath":"/Users/roy/royws/shell-executor/specs/index.spec.js","messages":[],"errorCount":0,"warningCount":0}},"/Users/roy/royws/shell-executor/source/src/grid.js":{"size":1195,"mtime":1486106523000,"hashOfConfig":"suduii","results":{"filePath":"/Users/roy/royws/shell-executor/source/src/grid.js","messages":[],"errorCount":0,"warningCount":0,"output":"import blessed from 'blessed';\nimport contrib from 'blessed-contrib';\nimport spawn from 'spawnly';\n\nexport const getGridAndScreen = () => {\n  const screen = blessed.screen();\n  const grid = new contrib.grid({ rows: 12, cols: 12, screen }); // eslint-disable-line\n\n  return {\n    screen,\n    grid,\n  };\n};\n\nconst getPositionByIndex = (index) => {\n  const positions = [\n    { row: 0, col: 0 },\n    { row: 0, col: 4 },\n    { row: 0, col: 8 },\n    { row: 6, col: 0 },\n    { row: 6, col: 4 },\n    { row: 6, col: 8 },\n  ];\n\n  return positions[index];\n};\n\nexport const setProcessLogToGrid = (cmd, grid, index) => {\n  const { row, col } = getPositionByIndex(index);\n\n  const log = grid.set(row, col, 4, 6, contrib.log, {\n    fg: 'green',\n    selectedFg: 'green',\n    label: cmd.substr(0, 40),\n  });\n\n  const addListener = (stream) => {\n    if (!stream.readable) return;\n    stream.on('data', chunk =>\n      log.log(chunk.toString()),\n    );\n  };\n\n  return {\n    start: () => {\n      const cp = spawn(cmd, { stdio: 'pipe' });\n\n      addListener(cp.stdout);\n      addListener(cp.stderr);\n\n      cp.on('close', (exitCode) => {\n        log.log(`process exit with code ${ exitCode }`);\n      });\n    },\n  };\n};\n"}},"/Users/roy/royws/shell-executor/source/src/main.js":{"size":3747,"mtime":1486106600000,"hashOfConfig":"suduii","results":{"filePath":"/Users/roy/royws/shell-executor/source/src/main.js","messages":[],"errorCount":0,"warningCount":0}}}